import Head from 'next/head';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import {
  getPersons,
  getRunningQueriesThunk,
  useGetPersonsQuery,
} from '@/services/persons';
import SearchBar from '@/Components/SearchBar/SearchBar';
import DropDown from '@/Components/DropDown/DropDown';
import Pagination from '@/Components/Pagination/Pagination';
import CardList from '@/Components/CardList/CardList';
import DetailedCard from '@/Components/DetailedCard.tsx/DetailedCard';
import { useRouter } from 'next/router';
import Logo from '@/Components/ui/Logo/Logo';
import { wrapper } from '@/store/store';

const inter = Inter({ subsets: ['latin'] });

export const getServerSideProps = wrapper.getServerSideProps(
  (store) => async (context) => {
    console.log('search:',context.query.details);

    store.dispatch(
      getPersons.initiate({ name: '', page: '1', pageSize: '20' })
    );

    await Promise.all(store.dispatch(getRunningQueriesThunk()));

    return {
      props: {},
    };
  }
);

export default function Home() {
  const router = useRouter();
  console.log('asPath', router.asPath);
  const search = router.query.search || '';
  const page = router.query.page || '1';
  const details = router.query.details || '';
  const limit = router.query.limit || '20';
  // const [error, setError] = useState(false);
  //   useEffect(() => {
  //     router.push({query: {search: search, page: page, details: details, limit: limit}})
  // },[])
  const { data } = useGetPersonsQuery({
    name: search,
    page: page,
    pageSize: limit,
  });
  const detailsData = data?.data.find((element) => element.id === details);
  const totalPages = data && Math.round(data.totalCount / data.pageSize);

  // const errorHandler = () => {
  //   setError(true);
  // };

  const closeDetails = () => {
    router.push({ query: { page: page } });
  };

  // if (error) {
  //   throw new Error('I crashed!');
  // }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className="app-wrapper">
          <Logo />
          <div className="control-block">
            <SearchBar />
            {/* <button onClick={errorHandler}>throw an error</button> */}
            <DropDown />
          </div>
          <Pagination pageCount={totalPages} />
          <div className="main-block">
            <div className="cards__wrapper">
              {details && <div className="hidden" onClick={closeDetails}></div>}
              <CardList cards={data?.data} isLoading={false} />
            </div>
            {details && <DetailedCard detailsData={detailsData} />}
          </div>
        </div>
      </main>
    </>
  );
}
