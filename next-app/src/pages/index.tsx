import Head from 'next/head';
import styles from '../styles/Home.module.css';
import {
  getPersons,
  getPerson,
  getRunningQueriesThunk,
  useGetPersonsQuery,
} from '../services/persons';
import SearchBar from '../Components/SearchBar/SearchBar';
import DropDown from '../Components/DropDown/DropDown';
import Pagination from '../Components/Pagination/Pagination';
import CardList from '../Components/CardList/CardList';
import DetailedCard from '../Components/DetailedCard.tsx/DetailedCard';
import { useRouter } from 'next/router';
import Logo from '../Components/ui/Logo/Logo';
import { wrapper } from '../store/store';

export const getServerSideProps = wrapper.getServerSideProps(
  (store) => async (context) => {
    const search = context.query.search || '';
    const page = context.query.page || '1';
    const limit = context.query.limit || '20';
    const details = context.query.details;
    if (typeof search === 'string') {
      store.dispatch(
        getPersons.initiate({ name: search, page: page, pageSize: limit })
      );
    }
    if (typeof details === 'string') {
      store.dispatch(getPerson.initiate(details));
    }

    await Promise.all(store.dispatch(getRunningQueriesThunk()));

    return {
      props: {},
    };
  }
);

export default function Home() {
  const router = useRouter();
  const search = router.query.search || '';
  const page = router.query.page || '1';
  const details = router.query.details;
  const limit = router.query.limit || '20';
  const { data } = useGetPersonsQuery({
    name: search,
    page: page,
    pageSize: limit,
  });
  const totalPages = data && Math.round(data.totalCount / data.pageSize);

  function closeDetails() {
    router.push({
      query: {
        page: router.query.page,
        limit: router.query.limit,
        search: router.query.search,
      },
    });
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main}`}>
        <div className="app-wrapper">
          <Logo />
          <div className="control-block">
            <SearchBar />
            <DropDown />
          </div>
          <Pagination pageCount={totalPages} />
          <div className="main-block">
            <div className="cards__wrapper">
              {details && <div className="hidden" onClick={closeDetails}></div>}
              <CardList cards={data?.data} />
            </div>
            {typeof details === 'string' && <DetailedCard details={details} />}
          </div>
        </div>
      </main>
    </>
  );
}
